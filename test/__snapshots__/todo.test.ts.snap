// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test 1`] = `
Object {
  "Outputs": Object {
    "apifortodoEndpoint40F55E6C": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apifortodo077CA7D1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apifortodoDeploymentStagedev79725401",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "apifortodo077CA7D1": Object {
      "Properties": Object {
        "Name": "api-for-todo",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apifortodoAccountD0C652A8": Object {
      "DependsOn": Array [
        "apifortodo077CA7D1",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apifortodoCloudWatchRole077B6200",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apifortodoCloudWatchRole077B6200": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apifortodoDeploymentBE0BAFB0cbd09a6dad5cb320e759a8f6f0d2e431": Object {
      "DependsOn": Array [
        "apifortodotasksuserIdtaskIdDELETE592CB380",
        "apifortodotasksuserIdtaskIdGET03048353",
        "apifortodotasksuserIdtaskIdPATCH32511B27",
        "apifortodotasksuserIdtaskIdD8F3E659",
        "apifortodotasksuserIdGET598A8DCF",
        "apifortodotasksuserIdPOSTFBB83CD6",
        "apifortodotasksuserIdBDF8D8D7",
        "apifortodotasksEA34E6F3",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apifortodoDeploymentStagedev79725401": Object {
      "DependsOn": Array [
        "apifortodoAccountD0C652A8",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "apifortodoDeploymentBE0BAFB0cbd09a6dad5cb320e759a8f6f0d2e431",
        },
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
        "StageName": "dev",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apifortodotasksEA34E6F3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apifortodo077CA7D1",
            "RootResourceId",
          ],
        },
        "PathPart": "tasks",
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apifortodotasksuserIdBDF8D8D7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "apifortodotasksEA34E6F3",
        },
        "PathPart": "{userId}",
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apifortodotasksuserIdGET598A8DCF": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambdagetallFC18A377",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "apifortodotasksuserIdBDF8D8D7",
        },
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apifortodotasksuserIdGETApiPermissionTesttesttodoapifortodoDC0FE91DGETtasksuserIdA92B7B9E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdagetallFC18A377",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/test-invoke-stage/GET/tasks/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdGETApiPermissiontesttodoapifortodoDC0FE91DGETtasksuserIdC1491431": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdagetallFC18A377",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/",
              Object {
                "Ref": "apifortodoDeploymentStagedev79725401",
              },
              "/GET/tasks/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdPOSTApiPermissionTesttesttodoapifortodoDC0FE91DPOSTtasksuserIdD411645B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdaaddB7A92210",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/test-invoke-stage/POST/tasks/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdPOSTApiPermissiontesttodoapifortodoDC0FE91DPOSTtasksuserId92E9654D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdaaddB7A92210",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/",
              Object {
                "Ref": "apifortodoDeploymentStagedev79725401",
              },
              "/POST/tasks/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdPOSTFBB83CD6": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambdaaddB7A92210",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "apifortodotasksuserIdBDF8D8D7",
        },
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apifortodotasksuserIdtaskIdD8F3E659": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "apifortodotasksuserIdBDF8D8D7",
        },
        "PathPart": "{taskId}",
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apifortodotasksuserIdtaskIdDELETE592CB380": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambdadeleteD1AEA557",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "apifortodotasksuserIdtaskIdD8F3E659",
        },
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apifortodotasksuserIdtaskIdDELETEApiPermissionTesttesttodoapifortodoDC0FE91DDELETEtasksuserIdtaskIdB3511697": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdadeleteD1AEA557",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/test-invoke-stage/DELETE/tasks/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdtaskIdDELETEApiPermissiontesttodoapifortodoDC0FE91DDELETEtasksuserIdtaskId31CEAA20": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdadeleteD1AEA557",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/",
              Object {
                "Ref": "apifortodoDeploymentStagedev79725401",
              },
              "/DELETE/tasks/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdtaskIdGET03048353": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambdagetsingle3D834776",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "apifortodotasksuserIdtaskIdD8F3E659",
        },
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apifortodotasksuserIdtaskIdGETApiPermissionTesttesttodoapifortodoDC0FE91DGETtasksuserIdtaskIdB294FE81": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdagetsingle3D834776",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/test-invoke-stage/GET/tasks/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdtaskIdGETApiPermissiontesttodoapifortodoDC0FE91DGETtasksuserIdtaskId9F311FA4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdagetsingle3D834776",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/",
              Object {
                "Ref": "apifortodoDeploymentStagedev79725401",
              },
              "/GET/tasks/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdtaskIdPATCH32511B27": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "PATCH",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambdaupdate359750CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "apifortodotasksuserIdtaskIdD8F3E659",
        },
        "RestApiId": Object {
          "Ref": "apifortodo077CA7D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apifortodotasksuserIdtaskIdPATCHApiPermissionTesttesttodoapifortodoDC0FE91DPATCHtasksuserIdtaskIdD28C5409": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdaupdate359750CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/test-invoke-stage/PATCH/tasks/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "apifortodotasksuserIdtaskIdPATCHApiPermissiontesttodoapifortodoDC0FE91DPATCHtasksuserIdtaskId19C99E89": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambdaupdate359750CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "apifortodo077CA7D1",
              },
              "/",
              Object {
                "Ref": "apifortodoDeploymentStagedev79725401",
              },
              "/PATCH/tasks/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "lambdaaddB7A92210": Object {
      "DependsOn": Array [
        "lambdaaddServiceRoleDefaultPolicy27D79BEA",
        "lambdaaddServiceRole197694E3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9817f99eb592fa5ecbba89a50e4a579299885e5365134176a996976afcb36661.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "todoF305747F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdaaddServiceRole197694E3",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdaaddServiceRole197694E3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdaaddServiceRoleDefaultPolicy27D79BEA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "todoF305747F",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdaaddServiceRoleDefaultPolicy27D79BEA",
        "Roles": Array [
          Object {
            "Ref": "lambdaaddServiceRole197694E3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdadeleteD1AEA557": Object {
      "DependsOn": Array [
        "lambdadeleteServiceRoleDefaultPolicyAAF42257",
        "lambdadeleteServiceRole215916BA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "46dcddf591a3e3c538617bda4b7c2271e748cb7f454cb826b2c606856d947e4c.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "todoF305747F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdadeleteServiceRole215916BA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdadeleteServiceRole215916BA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdadeleteServiceRoleDefaultPolicyAAF42257": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "todoF305747F",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdadeleteServiceRoleDefaultPolicyAAF42257",
        "Roles": Array [
          Object {
            "Ref": "lambdadeleteServiceRole215916BA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdagetallFC18A377": Object {
      "DependsOn": Array [
        "lambdagetallServiceRoleDefaultPolicy62B65455",
        "lambdagetallServiceRoleCB04160E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7088b978264e2ef73022cb0304cbe3df34c509e16e16be92633e56ee5acf43b4.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "todoF305747F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdagetallServiceRoleCB04160E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdagetallServiceRoleCB04160E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdagetallServiceRoleDefaultPolicy62B65455": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "todoF305747F",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdagetallServiceRoleDefaultPolicy62B65455",
        "Roles": Array [
          Object {
            "Ref": "lambdagetallServiceRoleCB04160E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdagetsingle3D834776": Object {
      "DependsOn": Array [
        "lambdagetsingleServiceRoleDefaultPolicy5812AC61",
        "lambdagetsingleServiceRole2B8A99A3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a81a98c32327e8fde4f00da609d312826e59537c05b913b246102ce224ea6bcd.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "todoF305747F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdagetsingleServiceRole2B8A99A3",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdagetsingleServiceRole2B8A99A3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdagetsingleServiceRoleDefaultPolicy5812AC61": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "todoF305747F",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdagetsingleServiceRoleDefaultPolicy5812AC61",
        "Roles": Array [
          Object {
            "Ref": "lambdagetsingleServiceRole2B8A99A3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdaupdate359750CE": Object {
      "DependsOn": Array [
        "lambdaupdateServiceRoleDefaultPolicy13E44AD3",
        "lambdaupdateServiceRoleEBC89A6A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9ae39d3d8f7f06cfbf6b3b79abf82007b4b21e8991e11f90d194c4ffd2c2d0c2.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "todoF305747F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdaupdateServiceRoleEBC89A6A",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdaupdateServiceRoleDefaultPolicy13E44AD3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "todoF305747F",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdaupdateServiceRoleDefaultPolicy13E44AD3",
        "Roles": Array [
          Object {
            "Ref": "lambdaupdateServiceRoleEBC89A6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdaupdateServiceRoleEBC89A6A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "todoF305747F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "userId",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "taskId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "userId",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "taskId",
            "KeyType": "RANGE",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
